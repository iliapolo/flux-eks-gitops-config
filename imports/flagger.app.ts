// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 * AlertProvider is the Schema for the AlertProvider API.
 *
 * @schema AlertProvider
 */
export class AlertProvider extends ApiObject {
  /**
   * Returns the apiVersion and kind for "AlertProvider"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'flagger.app/v1beta1',
    kind: 'AlertProvider',
  }

  /**
   * Renders a Kubernetes manifest for "AlertProvider".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: AlertProviderProps = {}): any {
    return {
      ...AlertProvider.GVK,
      ...toJson_AlertProviderProps(props),
    };
  }

  /**
   * Defines a "AlertProvider" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: AlertProviderProps = {}) {
    super(scope, id, {
      ...AlertProvider.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...AlertProvider.GVK,
      ...toJson_AlertProviderProps(resolved),
    };
  }
}

/**
 * AlertProvider is the Schema for the AlertProvider API.
 *
 * @schema AlertProvider
 */
export interface AlertProviderProps {
  /**
   * @schema AlertProvider#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * AlertProviderSpec defines the desired state of a AlertProvider.
   *
   * @schema AlertProvider#spec
   */
  readonly spec?: AlertProviderSpec;

}

/**
 * Converts an object of type 'AlertProviderProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AlertProviderProps(obj: AlertProviderProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_AlertProviderSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * AlertProviderSpec defines the desired state of a AlertProvider.
 *
 * @schema AlertProviderSpec
 */
export interface AlertProviderSpec {
  /**
   * Type of this provider
   *
   * @schema AlertProviderSpec#type
   */
  readonly type?: AlertProviderSpecType;

  /**
   * Alert channel for this provider
   *
   * @schema AlertProviderSpec#channel
   */
  readonly channel?: string;

  /**
   * Bot username for this provider
   *
   * @schema AlertProviderSpec#username
   */
  readonly username?: string;

  /**
   * Hook URL address of this provider
   *
   * @schema AlertProviderSpec#address
   */
  readonly address?: string;

  /**
   * Http/s proxy of this provider
   *
   * @schema AlertProviderSpec#proxy
   */
  readonly proxy?: string;

  /**
   * Kubernetes secret reference containing the provider address
   *
   * @schema AlertProviderSpec#secretRef
   */
  readonly secretRef?: AlertProviderSpecSecretRef;

}

/**
 * Converts an object of type 'AlertProviderSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AlertProviderSpec(obj: AlertProviderSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'type': obj.type,
    'channel': obj.channel,
    'username': obj.username,
    'address': obj.address,
    'proxy': obj.proxy,
    'secretRef': toJson_AlertProviderSpecSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Type of this provider
 *
 * @schema AlertProviderSpecType
 */
export enum AlertProviderSpecType {
  /** slack */
  SLACK = 'slack',
  /** msteams */
  MSTEAMS = 'msteams',
  /** discord */
  DISCORD = 'discord',
  /** rocket */
  ROCKET = 'rocket',
  /** gchat */
  GCHAT = 'gchat',
}

/**
 * Kubernetes secret reference containing the provider address
 *
 * @schema AlertProviderSpecSecretRef
 */
export interface AlertProviderSpecSecretRef {
  /**
   * Name of the Kubernetes secret
   *
   * @schema AlertProviderSpecSecretRef#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'AlertProviderSpecSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AlertProviderSpecSecretRef(obj: AlertProviderSpecSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * Canary is the Schema for the Canary API.
 *
 * @schema Canary
 */
export class Canary extends ApiObject {
  /**
   * Returns the apiVersion and kind for "Canary"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'flagger.app/v1beta1',
    kind: 'Canary',
  }

  /**
   * Renders a Kubernetes manifest for "Canary".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: CanaryProps = {}): any {
    return {
      ...Canary.GVK,
      ...toJson_CanaryProps(props),
    };
  }

  /**
   * Defines a "Canary" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: CanaryProps = {}) {
    super(scope, id, {
      ...Canary.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...Canary.GVK,
      ...toJson_CanaryProps(resolved),
    };
  }
}

/**
 * Canary is the Schema for the Canary API.
 *
 * @schema Canary
 */
export interface CanaryProps {
  /**
   * @schema Canary#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * CanarySpec defines the desired state of a Canary.
   *
   * @schema Canary#spec
   */
  readonly spec?: CanarySpec;

}

/**
 * Converts an object of type 'CanaryProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanaryProps(obj: CanaryProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_CanarySpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * CanarySpec defines the desired state of a Canary.
 *
 * @schema CanarySpec
 */
export interface CanarySpec {
  /**
   * Traffic managent provider
   *
   * @schema CanarySpec#provider
   */
  readonly provider?: string;

  /**
   * Prometheus URL
   *
   * @schema CanarySpec#metricsServer
   */
  readonly metricsServer?: string;

  /**
   * Deployment progress deadline
   *
   * @schema CanarySpec#progressDeadlineSeconds
   */
  readonly progressDeadlineSeconds?: number;

  /**
   * Target selector
   *
   * @schema CanarySpec#targetRef
   */
  readonly targetRef: CanarySpecTargetRef;

  /**
   * HPA selector
   *
   * @schema CanarySpec#autoscalerRef
   */
  readonly autoscalerRef?: CanarySpecAutoscalerRef;

  /**
   * Ingress selector
   *
   * @schema CanarySpec#ingressRef
   */
  readonly ingressRef?: CanarySpecIngressRef;

  /**
   * Gloo Upstream selector
   *
   * @schema CanarySpec#upstreamRef
   */
  readonly upstreamRef?: CanarySpecUpstreamRef;

  /**
   * Kubernetes Service spec
   *
   * @schema CanarySpec#service
   */
  readonly service: CanarySpecService;

  /**
   * Skip analysis and promote canary
   *
   * @schema CanarySpec#skipAnalysis
   */
  readonly skipAnalysis?: boolean;

  /**
   * Revert mutated resources to original spec on deletion
   *
   * @schema CanarySpec#revertOnDeletion
   */
  readonly revertOnDeletion?: boolean;

  /**
   * Canary analysis for this canary
   *
   * @schema CanarySpec#analysis
   */
  readonly analysis: CanarySpecAnalysis;

}

/**
 * Converts an object of type 'CanarySpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpec(obj: CanarySpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'provider': obj.provider,
    'metricsServer': obj.metricsServer,
    'progressDeadlineSeconds': obj.progressDeadlineSeconds,
    'targetRef': toJson_CanarySpecTargetRef(obj.targetRef),
    'autoscalerRef': toJson_CanarySpecAutoscalerRef(obj.autoscalerRef),
    'ingressRef': toJson_CanarySpecIngressRef(obj.ingressRef),
    'upstreamRef': toJson_CanarySpecUpstreamRef(obj.upstreamRef),
    'service': toJson_CanarySpecService(obj.service),
    'skipAnalysis': obj.skipAnalysis,
    'revertOnDeletion': obj.revertOnDeletion,
    'analysis': toJson_CanarySpecAnalysis(obj.analysis),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Target selector
 *
 * @schema CanarySpecTargetRef
 */
export interface CanarySpecTargetRef {
  /**
   * @schema CanarySpecTargetRef#apiVersion
   */
  readonly apiVersion: string;

  /**
   * @schema CanarySpecTargetRef#kind
   */
  readonly kind: CanarySpecTargetRefKind;

  /**
   * @schema CanarySpecTargetRef#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CanarySpecTargetRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecTargetRef(obj: CanarySpecTargetRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HPA selector
 *
 * @schema CanarySpecAutoscalerRef
 */
export interface CanarySpecAutoscalerRef {
  /**
   * @schema CanarySpecAutoscalerRef#apiVersion
   */
  readonly apiVersion: string;

  /**
   * @schema CanarySpecAutoscalerRef#kind
   */
  readonly kind: CanarySpecAutoscalerRefKind;

  /**
   * @schema CanarySpecAutoscalerRef#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CanarySpecAutoscalerRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecAutoscalerRef(obj: CanarySpecAutoscalerRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Ingress selector
 *
 * @schema CanarySpecIngressRef
 */
export interface CanarySpecIngressRef {
  /**
   * @schema CanarySpecIngressRef#apiVersion
   */
  readonly apiVersion: string;

  /**
   * @schema CanarySpecIngressRef#kind
   */
  readonly kind: CanarySpecIngressRefKind;

  /**
   * @schema CanarySpecIngressRef#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'CanarySpecIngressRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecIngressRef(obj: CanarySpecIngressRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Gloo Upstream selector
 *
 * @schema CanarySpecUpstreamRef
 */
export interface CanarySpecUpstreamRef {
  /**
   * @schema CanarySpecUpstreamRef#apiVersion
   */
  readonly apiVersion: string;

  /**
   * @schema CanarySpecUpstreamRef#kind
   */
  readonly kind: CanarySpecUpstreamRefKind;

  /**
   * @schema CanarySpecUpstreamRef#name
   */
  readonly name: string;

  /**
   * @schema CanarySpecUpstreamRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'CanarySpecUpstreamRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecUpstreamRef(obj: CanarySpecUpstreamRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'kind': obj.kind,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Kubernetes Service spec
 *
 * @schema CanarySpecService
 */
export interface CanarySpecService {
  /**
   * Kubernetes service name
   *
   * @schema CanarySpecService#name
   */
  readonly name?: string;

  /**
   * Container port number
   *
   * @schema CanarySpecService#port
   */
  readonly port: number;

  /**
   * Container port name
   *
   * @schema CanarySpecService#portName
   */
  readonly portName?: string;

  /**
   * Container target port name
   *
   * @schema CanarySpecService#targetPort
   */
  readonly targetPort?: any;

  /**
   * Enable port dicovery
   *
   * @schema CanarySpecService#portDiscovery
   */
  readonly portDiscovery?: boolean;

  /**
   * HTTP or gRPC request timeout
   *
   * @schema CanarySpecService#timeout
   */
  readonly timeout?: string;

  /**
   * AppMesh mesh name
   *
   * @schema CanarySpecService#meshName
   */
  readonly meshName?: string;

  /**
   * AppMesh backend array
   *
   * @schema CanarySpecService#backends
   */
  readonly backends?: string[];

  /**
   * The list of host names for this service
   *
   * @schema CanarySpecService#hosts
   */
  readonly hosts?: string[];

  /**
   * enable behaving as a delegate VirtualService
   *
   * @schema CanarySpecService#delegation
   */
  readonly delegation?: boolean;

  /**
   * URI match conditions
   *
   * @schema CanarySpecService#match
   */
  readonly match?: CanarySpecServiceMatch[];

  /**
   * Retry policy for HTTP requests
   *
   * @schema CanarySpecService#retries
   */
  readonly retries?: CanarySpecServiceRetries;

  /**
   * Rewrite HTTP URIs
   *
   * @schema CanarySpecService#rewrite
   */
  readonly rewrite?: CanarySpecServiceRewrite;

  /**
   * Headers operations
   *
   * @schema CanarySpecService#headers
   */
  readonly headers?: CanarySpecServiceHeaders;

  /**
   * The list of Istio gateway for this virtual service
   *
   * @schema CanarySpecService#gateways
   */
  readonly gateways?: string[];

  /**
   * Istio Cross-Origin Resource Sharing policy (CORS)
   *
   * @schema CanarySpecService#corsPolicy
   */
  readonly corsPolicy?: CanarySpecServiceCorsPolicy;

  /**
   * Istio traffic policy
   *
   * @schema CanarySpecService#trafficPolicy
   */
  readonly trafficPolicy?: CanarySpecServiceTrafficPolicy;

  /**
   * Metadata to add to the apex service
   *
   * @schema CanarySpecService#apex
   */
  readonly apex?: CanarySpecServiceApex;

  /**
   * Metadata to add to the primary service
   *
   * @schema CanarySpecService#primary
   */
  readonly primary?: CanarySpecServicePrimary;

  /**
   * Metadata to add to the canary service
   *
   * @schema CanarySpecService#canary
   */
  readonly canary?: CanarySpecServiceCanary;

}

/**
 * Converts an object of type 'CanarySpecService' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecService(obj: CanarySpecService | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'port': obj.port,
    'portName': obj.portName,
    'targetPort': obj.targetPort,
    'portDiscovery': obj.portDiscovery,
    'timeout': obj.timeout,
    'meshName': obj.meshName,
    'backends': obj.backends?.map(y => y),
    'hosts': obj.hosts?.map(y => y),
    'delegation': obj.delegation,
    'match': obj.match?.map(y => toJson_CanarySpecServiceMatch(y)),
    'retries': toJson_CanarySpecServiceRetries(obj.retries),
    'rewrite': toJson_CanarySpecServiceRewrite(obj.rewrite),
    'headers': toJson_CanarySpecServiceHeaders(obj.headers),
    'gateways': obj.gateways?.map(y => y),
    'corsPolicy': toJson_CanarySpecServiceCorsPolicy(obj.corsPolicy),
    'trafficPolicy': toJson_CanarySpecServiceTrafficPolicy(obj.trafficPolicy),
    'apex': toJson_CanarySpecServiceApex(obj.apex),
    'primary': toJson_CanarySpecServicePrimary(obj.primary),
    'canary': toJson_CanarySpecServiceCanary(obj.canary),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Canary analysis for this canary
 *
 * @schema CanarySpecAnalysis
 */
export interface CanarySpecAnalysis {
  /**
   * Schedule interval for this canary
   *
   * @schema CanarySpecAnalysis#interval
   */
  readonly interval?: string;

  /**
   * Number of checks to run for A/B Testing and Blue/Green
   *
   * @schema CanarySpecAnalysis#iterations
   */
  readonly iterations?: number;

  /**
   * Max number of failed checks before rollback
   *
   * @schema CanarySpecAnalysis#threshold
   */
  readonly threshold?: number;

  /**
   * Max traffic weight routed to canary
   *
   * @schema CanarySpecAnalysis#maxWeight
   */
  readonly maxWeight?: number;

  /**
   * Incremental traffic step weight for the analysis phase
   *
   * @schema CanarySpecAnalysis#stepWeight
   */
  readonly stepWeight?: number;

  /**
   * Incremental traffic step weights for the analysis phase
   *
   * @schema CanarySpecAnalysis#stepWeights
   */
  readonly stepWeights?: number[];

  /**
   * Incremental traffic step weight for the promotion phase
   *
   * @schema CanarySpecAnalysis#stepWeightPromotion
   */
  readonly stepWeightPromotion?: number;

  /**
   * Mirror traffic to canary
   *
   * @schema CanarySpecAnalysis#mirror
   */
  readonly mirror?: boolean;

  /**
   * Weight of traffic to be mirrored
   *
   * @schema CanarySpecAnalysis#mirrorWeight
   */
  readonly mirrorWeight?: number;

  /**
   * Percentage of pods that need to be available to consider primary as ready
   *
   * @schema CanarySpecAnalysis#primaryReadyThreshold
   */
  readonly primaryReadyThreshold?: number;

  /**
   * A/B testing match conditions
   *
   * @schema CanarySpecAnalysis#match
   */
  readonly match?: CanarySpecAnalysisMatch[];

  /**
   * Metric check list for this canary
   *
   * @schema CanarySpecAnalysis#metrics
   */
  readonly metrics?: CanarySpecAnalysisMetrics[];

  /**
   * Alert list for this canary analysis
   *
   * @schema CanarySpecAnalysis#alerts
   */
  readonly alerts?: CanarySpecAnalysisAlerts[];

  /**
   * Webhook list for this canary
   *
   * @schema CanarySpecAnalysis#webhooks
   */
  readonly webhooks?: CanarySpecAnalysisWebhooks[];

}

/**
 * Converts an object of type 'CanarySpecAnalysis' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecAnalysis(obj: CanarySpecAnalysis | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'interval': obj.interval,
    'iterations': obj.iterations,
    'threshold': obj.threshold,
    'maxWeight': obj.maxWeight,
    'stepWeight': obj.stepWeight,
    'stepWeights': obj.stepWeights?.map(y => y),
    'stepWeightPromotion': obj.stepWeightPromotion,
    'mirror': obj.mirror,
    'mirrorWeight': obj.mirrorWeight,
    'primaryReadyThreshold': obj.primaryReadyThreshold,
    'match': obj.match?.map(y => toJson_CanarySpecAnalysisMatch(y)),
    'metrics': obj.metrics?.map(y => toJson_CanarySpecAnalysisMetrics(y)),
    'alerts': obj.alerts?.map(y => toJson_CanarySpecAnalysisAlerts(y)),
    'webhooks': obj.webhooks?.map(y => toJson_CanarySpecAnalysisWebhooks(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecTargetRefKind
 */
export enum CanarySpecTargetRefKind {
  /** DaemonSet */
  DAEMON_SET = 'DaemonSet',
  /** Deployment */
  DEPLOYMENT = 'Deployment',
  /** Service */
  SERVICE = 'Service',
}

/**
 * @schema CanarySpecAutoscalerRefKind
 */
export enum CanarySpecAutoscalerRefKind {
  /** HorizontalPodAutoscaler */
  HORIZONTAL_POD_AUTOSCALER = 'HorizontalPodAutoscaler',
}

/**
 * @schema CanarySpecIngressRefKind
 */
export enum CanarySpecIngressRefKind {
  /** Ingress */
  INGRESS = 'Ingress',
}

/**
 * @schema CanarySpecUpstreamRefKind
 */
export enum CanarySpecUpstreamRefKind {
  /** Upstream */
  UPSTREAM = 'Upstream',
}

/**
 * @schema CanarySpecServiceMatch
 */
export interface CanarySpecServiceMatch {
  /**
   * @schema CanarySpecServiceMatch#authority
   */
  readonly authority?: CanarySpecServiceMatchAuthority;

  /**
   * Names of gateways where the rule should be applied.
   *
   * @schema CanarySpecServiceMatch#gateways
   */
  readonly gateways?: string[];

  /**
   * @schema CanarySpecServiceMatch#headers
   */
  readonly headers?: { [key: string]: CanarySpecServiceMatchHeaders };

  /**
   * Flag to specify whether the URI matching should be case-insensitive.
   *
   * @schema CanarySpecServiceMatch#ignoreUriCase
   */
  readonly ignoreUriCase?: boolean;

  /**
   * @schema CanarySpecServiceMatch#method
   */
  readonly method?: CanarySpecServiceMatchMethod;

  /**
   * The name assigned to a match.
   *
   * @schema CanarySpecServiceMatch#name
   */
  readonly name?: string;

  /**
   * Specifies the ports on the host that is being addressed.
   *
   * @schema CanarySpecServiceMatch#port
   */
  readonly port?: number;

  /**
   * Query parameters for matching.
   *
   * @schema CanarySpecServiceMatch#queryParams
   */
  readonly queryParams?: { [key: string]: CanarySpecServiceMatchQueryParams };

  /**
   * @schema CanarySpecServiceMatch#scheme
   */
  readonly scheme?: CanarySpecServiceMatchScheme;

  /**
   * @schema CanarySpecServiceMatch#sourceLabels
   */
  readonly sourceLabels?: { [key: string]: string };

  /**
   * Source namespace constraining the applicability of a rule to workloads in that namespace.
   *
   * @schema CanarySpecServiceMatch#sourceNamespace
   */
  readonly sourceNamespace?: string;

  /**
   * @schema CanarySpecServiceMatch#uri
   */
  readonly uri?: CanarySpecServiceMatchUri;

  /**
   * withoutHeader has the same syntax with the header, but has opposite meaning.
   *
   * @schema CanarySpecServiceMatch#withoutHeaders
   */
  readonly withoutHeaders?: { [key: string]: CanarySpecServiceMatchWithoutHeaders };

}

/**
 * Converts an object of type 'CanarySpecServiceMatch' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceMatch(obj: CanarySpecServiceMatch | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'authority': toJson_CanarySpecServiceMatchAuthority(obj.authority),
    'gateways': obj.gateways?.map(y => y),
    'headers': ((obj.headers) === undefined) ? undefined : (Object.entries(obj.headers).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: toJson_CanarySpecServiceMatchHeaders(i[1]) }), {})),
    'ignoreUriCase': obj.ignoreUriCase,
    'method': toJson_CanarySpecServiceMatchMethod(obj.method),
    'name': obj.name,
    'port': obj.port,
    'queryParams': ((obj.queryParams) === undefined) ? undefined : (Object.entries(obj.queryParams).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: toJson_CanarySpecServiceMatchQueryParams(i[1]) }), {})),
    'scheme': toJson_CanarySpecServiceMatchScheme(obj.scheme),
    'sourceLabels': ((obj.sourceLabels) === undefined) ? undefined : (Object.entries(obj.sourceLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'sourceNamespace': obj.sourceNamespace,
    'uri': toJson_CanarySpecServiceMatchUri(obj.uri),
    'withoutHeaders': ((obj.withoutHeaders) === undefined) ? undefined : (Object.entries(obj.withoutHeaders).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: toJson_CanarySpecServiceMatchWithoutHeaders(i[1]) }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Retry policy for HTTP requests
 *
 * @schema CanarySpecServiceRetries
 */
export interface CanarySpecServiceRetries {
  /**
   * Number of retries for a given request
   *
   * @schema CanarySpecServiceRetries#attempts
   */
  readonly attempts?: number;

  /**
   * Timeout per retry attempt for a given request
   *
   * @schema CanarySpecServiceRetries#perTryTimeout
   */
  readonly perTryTimeout?: string;

  /**
   * Specifies the conditions under which retry takes place
   *
   * @schema CanarySpecServiceRetries#retryOn
   */
  readonly retryOn?: string;

}

/**
 * Converts an object of type 'CanarySpecServiceRetries' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceRetries(obj: CanarySpecServiceRetries | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'attempts': obj.attempts,
    'perTryTimeout': obj.perTryTimeout,
    'retryOn': obj.retryOn,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Rewrite HTTP URIs
 *
 * @schema CanarySpecServiceRewrite
 */
export interface CanarySpecServiceRewrite {
  /**
   * @schema CanarySpecServiceRewrite#uri
   */
  readonly uri?: string;

}

/**
 * Converts an object of type 'CanarySpecServiceRewrite' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceRewrite(obj: CanarySpecServiceRewrite | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'uri': obj.uri,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Headers operations
 *
 * @schema CanarySpecServiceHeaders
 */
export interface CanarySpecServiceHeaders {
  /**
   * @schema CanarySpecServiceHeaders#request
   */
  readonly request?: CanarySpecServiceHeadersRequest;

  /**
   * @schema CanarySpecServiceHeaders#response
   */
  readonly response?: CanarySpecServiceHeadersResponse;

}

/**
 * Converts an object of type 'CanarySpecServiceHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceHeaders(obj: CanarySpecServiceHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'request': toJson_CanarySpecServiceHeadersRequest(obj.request),
    'response': toJson_CanarySpecServiceHeadersResponse(obj.response),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Istio Cross-Origin Resource Sharing policy (CORS)
 *
 * @schema CanarySpecServiceCorsPolicy
 */
export interface CanarySpecServiceCorsPolicy {
  /**
   * @schema CanarySpecServiceCorsPolicy#allowCredentials
   */
  readonly allowCredentials?: boolean;

  /**
   * @schema CanarySpecServiceCorsPolicy#allowHeaders
   */
  readonly allowHeaders?: string[];

  /**
   * List of HTTP methods allowed to access the resource
   *
   * @schema CanarySpecServiceCorsPolicy#allowMethods
   */
  readonly allowMethods?: string[];

  /**
   * The list of origins that are allowed to perform CORS requests.
   *
   * @schema CanarySpecServiceCorsPolicy#allowOrigin
   */
  readonly allowOrigin?: string[];

  /**
   * String patterns that match allowed origins
   *
   * @schema CanarySpecServiceCorsPolicy#allowOrigins
   */
  readonly allowOrigins?: CanarySpecServiceCorsPolicyAllowOrigins[];

  /**
   * @schema CanarySpecServiceCorsPolicy#exposeHeaders
   */
  readonly exposeHeaders?: string[];

  /**
   * @schema CanarySpecServiceCorsPolicy#maxAge
   */
  readonly maxAge?: string;

}

/**
 * Converts an object of type 'CanarySpecServiceCorsPolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceCorsPolicy(obj: CanarySpecServiceCorsPolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowCredentials': obj.allowCredentials,
    'allowHeaders': obj.allowHeaders?.map(y => y),
    'allowMethods': obj.allowMethods?.map(y => y),
    'allowOrigin': obj.allowOrigin?.map(y => y),
    'allowOrigins': obj.allowOrigins?.map(y => toJson_CanarySpecServiceCorsPolicyAllowOrigins(y)),
    'exposeHeaders': obj.exposeHeaders?.map(y => y),
    'maxAge': obj.maxAge,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Istio traffic policy
 *
 * @schema CanarySpecServiceTrafficPolicy
 */
export interface CanarySpecServiceTrafficPolicy {
  /**
   * @schema CanarySpecServiceTrafficPolicy#connectionPool
   */
  readonly connectionPool?: CanarySpecServiceTrafficPolicyConnectionPool;

  /**
   * Settings controlling the load balancer algorithms.
   *
   * @schema CanarySpecServiceTrafficPolicy#loadBalancer
   */
  readonly loadBalancer?: CanarySpecServiceTrafficPolicyLoadBalancer;

  /**
   * Settings controlling eviction of unhealthy hosts from the load balancing pool.
   *
   * @schema CanarySpecServiceTrafficPolicy#outlierDetection
   */
  readonly outlierDetection?: CanarySpecServiceTrafficPolicyOutlierDetection;

  /**
   * Istio TLS related settings for connections to the upstream service
   *
   * @schema CanarySpecServiceTrafficPolicy#tls
   */
  readonly tls?: CanarySpecServiceTrafficPolicyTls;

}

/**
 * Converts an object of type 'CanarySpecServiceTrafficPolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceTrafficPolicy(obj: CanarySpecServiceTrafficPolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'connectionPool': toJson_CanarySpecServiceTrafficPolicyConnectionPool(obj.connectionPool),
    'loadBalancer': toJson_CanarySpecServiceTrafficPolicyLoadBalancer(obj.loadBalancer),
    'outlierDetection': toJson_CanarySpecServiceTrafficPolicyOutlierDetection(obj.outlierDetection),
    'tls': toJson_CanarySpecServiceTrafficPolicyTls(obj.tls),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Metadata to add to the apex service
 *
 * @schema CanarySpecServiceApex
 */
export interface CanarySpecServiceApex {
  /**
   * @schema CanarySpecServiceApex#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema CanarySpecServiceApex#annotations
   */
  readonly annotations?: { [key: string]: string };

}

/**
 * Converts an object of type 'CanarySpecServiceApex' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceApex(obj: CanarySpecServiceApex | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Metadata to add to the primary service
 *
 * @schema CanarySpecServicePrimary
 */
export interface CanarySpecServicePrimary {
  /**
   * @schema CanarySpecServicePrimary#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema CanarySpecServicePrimary#annotations
   */
  readonly annotations?: { [key: string]: string };

}

/**
 * Converts an object of type 'CanarySpecServicePrimary' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServicePrimary(obj: CanarySpecServicePrimary | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Metadata to add to the canary service
 *
 * @schema CanarySpecServiceCanary
 */
export interface CanarySpecServiceCanary {
  /**
   * @schema CanarySpecServiceCanary#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema CanarySpecServiceCanary#annotations
   */
  readonly annotations?: { [key: string]: string };

}

/**
 * Converts an object of type 'CanarySpecServiceCanary' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceCanary(obj: CanarySpecServiceCanary | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecAnalysisMatch
 */
export interface CanarySpecAnalysisMatch {
  /**
   * @schema CanarySpecAnalysisMatch#headers
   */
  readonly headers?: { [key: string]: CanarySpecAnalysisMatchHeaders };

  /**
   * Applicable only when the 'mesh' gateway is included in the service.gateways list
   *
   * @schema CanarySpecAnalysisMatch#sourceLabels
   */
  readonly sourceLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'CanarySpecAnalysisMatch' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecAnalysisMatch(obj: CanarySpecAnalysisMatch | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'headers': ((obj.headers) === undefined) ? undefined : (Object.entries(obj.headers).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: toJson_CanarySpecAnalysisMatchHeaders(i[1]) }), {})),
    'sourceLabels': ((obj.sourceLabels) === undefined) ? undefined : (Object.entries(obj.sourceLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecAnalysisMetrics
 */
export interface CanarySpecAnalysisMetrics {
  /**
   * Name of the metric
   *
   * @schema CanarySpecAnalysisMetrics#name
   */
  readonly name: string;

  /**
   * Interval of the query
   *
   * @schema CanarySpecAnalysisMetrics#interval
   */
  readonly interval?: string;

  /**
   * Max value accepted for this metric
   *
   * @schema CanarySpecAnalysisMetrics#threshold
   */
  readonly threshold?: number;

  /**
   * Range accepted for this metric
   *
   * @schema CanarySpecAnalysisMetrics#thresholdRange
   */
  readonly thresholdRange?: CanarySpecAnalysisMetricsThresholdRange;

  /**
   * Prometheus query
   *
   * @schema CanarySpecAnalysisMetrics#query
   */
  readonly query?: string;

  /**
   * Metric template reference
   *
   * @schema CanarySpecAnalysisMetrics#templateRef
   */
  readonly templateRef?: CanarySpecAnalysisMetricsTemplateRef;

}

/**
 * Converts an object of type 'CanarySpecAnalysisMetrics' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecAnalysisMetrics(obj: CanarySpecAnalysisMetrics | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'interval': obj.interval,
    'threshold': obj.threshold,
    'thresholdRange': toJson_CanarySpecAnalysisMetricsThresholdRange(obj.thresholdRange),
    'query': obj.query,
    'templateRef': toJson_CanarySpecAnalysisMetricsTemplateRef(obj.templateRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecAnalysisAlerts
 */
export interface CanarySpecAnalysisAlerts {
  /**
   * Name of the this alert
   *
   * @schema CanarySpecAnalysisAlerts#name
   */
  readonly name: string;

  /**
   * Severity level can be info, warn, error (default info)
   *
   * @schema CanarySpecAnalysisAlerts#severity
   */
  readonly severity?: CanarySpecAnalysisAlertsSeverity;

  /**
   * Alert provider reference
   *
   * @schema CanarySpecAnalysisAlerts#providerRef
   */
  readonly providerRef: CanarySpecAnalysisAlertsProviderRef;

}

/**
 * Converts an object of type 'CanarySpecAnalysisAlerts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecAnalysisAlerts(obj: CanarySpecAnalysisAlerts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'severity': obj.severity,
    'providerRef': toJson_CanarySpecAnalysisAlertsProviderRef(obj.providerRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecAnalysisWebhooks
 */
export interface CanarySpecAnalysisWebhooks {
  /**
   * Name of the webhook
   *
   * @schema CanarySpecAnalysisWebhooks#name
   */
  readonly name: string;

  /**
   * Type of the webhook pre, post or during rollout
   *
   * @schema CanarySpecAnalysisWebhooks#type
   */
  readonly type?: CanarySpecAnalysisWebhooksType;

  /**
   * Mute all alerts for the webhook
   *
   * @schema CanarySpecAnalysisWebhooks#muteAlert
   */
  readonly muteAlert?: boolean;

  /**
   * URL address of this webhook
   *
   * @schema CanarySpecAnalysisWebhooks#url
   */
  readonly url: string;

  /**
   * Request timeout for this webhook
   *
   * @schema CanarySpecAnalysisWebhooks#timeout
   */
  readonly timeout?: string;

  /**
   * Metadata (key-value pairs) for this webhook
   *
   * @schema CanarySpecAnalysisWebhooks#metadata
   */
  readonly metadata?: { [key: string]: string };

}

/**
 * Converts an object of type 'CanarySpecAnalysisWebhooks' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecAnalysisWebhooks(obj: CanarySpecAnalysisWebhooks | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
    'muteAlert': obj.muteAlert,
    'url': obj.url,
    'timeout': obj.timeout,
    'metadata': ((obj.metadata) === undefined) ? undefined : (Object.entries(obj.metadata).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecServiceMatchAuthority
 */
export interface CanarySpecServiceMatchAuthority {
  /**
   * @schema CanarySpecServiceMatchAuthority#exact
   */
  readonly exact?: string;

  /**
   * @schema CanarySpecServiceMatchAuthority#prefix
   */
  readonly prefix?: string;

  /**
   * RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
   *
   * @schema CanarySpecServiceMatchAuthority#regex
   */
  readonly regex?: string;

}

/**
 * Converts an object of type 'CanarySpecServiceMatchAuthority' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceMatchAuthority(obj: CanarySpecServiceMatchAuthority | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exact': obj.exact,
    'prefix': obj.prefix,
    'regex': obj.regex,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecServiceMatchHeaders
 */
export interface CanarySpecServiceMatchHeaders {
  /**
   * @schema CanarySpecServiceMatchHeaders#exact
   */
  readonly exact?: string;

  /**
   * @schema CanarySpecServiceMatchHeaders#prefix
   */
  readonly prefix?: string;

  /**
   * RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
   *
   * @schema CanarySpecServiceMatchHeaders#regex
   */
  readonly regex?: string;

}

/**
 * Converts an object of type 'CanarySpecServiceMatchHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceMatchHeaders(obj: CanarySpecServiceMatchHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exact': obj.exact,
    'prefix': obj.prefix,
    'regex': obj.regex,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecServiceMatchMethod
 */
export interface CanarySpecServiceMatchMethod {
  /**
   * @schema CanarySpecServiceMatchMethod#exact
   */
  readonly exact?: string;

  /**
   * @schema CanarySpecServiceMatchMethod#prefix
   */
  readonly prefix?: string;

  /**
   * RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
   *
   * @schema CanarySpecServiceMatchMethod#regex
   */
  readonly regex?: string;

}

/**
 * Converts an object of type 'CanarySpecServiceMatchMethod' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceMatchMethod(obj: CanarySpecServiceMatchMethod | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exact': obj.exact,
    'prefix': obj.prefix,
    'regex': obj.regex,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecServiceMatchQueryParams
 */
export interface CanarySpecServiceMatchQueryParams {
  /**
   * @schema CanarySpecServiceMatchQueryParams#exact
   */
  readonly exact?: string;

  /**
   * @schema CanarySpecServiceMatchQueryParams#prefix
   */
  readonly prefix?: string;

  /**
   * RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
   *
   * @schema CanarySpecServiceMatchQueryParams#regex
   */
  readonly regex?: string;

}

/**
 * Converts an object of type 'CanarySpecServiceMatchQueryParams' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceMatchQueryParams(obj: CanarySpecServiceMatchQueryParams | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exact': obj.exact,
    'prefix': obj.prefix,
    'regex': obj.regex,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecServiceMatchScheme
 */
export interface CanarySpecServiceMatchScheme {
  /**
   * @schema CanarySpecServiceMatchScheme#exact
   */
  readonly exact?: string;

  /**
   * @schema CanarySpecServiceMatchScheme#prefix
   */
  readonly prefix?: string;

  /**
   * RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
   *
   * @schema CanarySpecServiceMatchScheme#regex
   */
  readonly regex?: string;

}

/**
 * Converts an object of type 'CanarySpecServiceMatchScheme' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceMatchScheme(obj: CanarySpecServiceMatchScheme | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exact': obj.exact,
    'prefix': obj.prefix,
    'regex': obj.regex,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecServiceMatchUri
 */
export interface CanarySpecServiceMatchUri {
  /**
   * @schema CanarySpecServiceMatchUri#exact
   */
  readonly exact?: string;

  /**
   * @schema CanarySpecServiceMatchUri#prefix
   */
  readonly prefix?: string;

  /**
   * RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
   *
   * @schema CanarySpecServiceMatchUri#regex
   */
  readonly regex?: string;

}

/**
 * Converts an object of type 'CanarySpecServiceMatchUri' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceMatchUri(obj: CanarySpecServiceMatchUri | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exact': obj.exact,
    'prefix': obj.prefix,
    'regex': obj.regex,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecServiceMatchWithoutHeaders
 */
export interface CanarySpecServiceMatchWithoutHeaders {
  /**
   * @schema CanarySpecServiceMatchWithoutHeaders#exact
   */
  readonly exact?: string;

  /**
   * @schema CanarySpecServiceMatchWithoutHeaders#prefix
   */
  readonly prefix?: string;

  /**
   * RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).
   *
   * @schema CanarySpecServiceMatchWithoutHeaders#regex
   */
  readonly regex?: string;

}

/**
 * Converts an object of type 'CanarySpecServiceMatchWithoutHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceMatchWithoutHeaders(obj: CanarySpecServiceMatchWithoutHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exact': obj.exact,
    'prefix': obj.prefix,
    'regex': obj.regex,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecServiceHeadersRequest
 */
export interface CanarySpecServiceHeadersRequest {
  /**
   * @schema CanarySpecServiceHeadersRequest#add
   */
  readonly add?: { [key: string]: string };

  /**
   * @schema CanarySpecServiceHeadersRequest#remove
   */
  readonly remove?: string[];

  /**
   * @schema CanarySpecServiceHeadersRequest#set
   */
  readonly set?: { [key: string]: string };

}

/**
 * Converts an object of type 'CanarySpecServiceHeadersRequest' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceHeadersRequest(obj: CanarySpecServiceHeadersRequest | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': ((obj.add) === undefined) ? undefined : (Object.entries(obj.add).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'remove': obj.remove?.map(y => y),
    'set': ((obj.set) === undefined) ? undefined : (Object.entries(obj.set).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecServiceHeadersResponse
 */
export interface CanarySpecServiceHeadersResponse {
  /**
   * @schema CanarySpecServiceHeadersResponse#add
   */
  readonly add?: { [key: string]: string };

  /**
   * @schema CanarySpecServiceHeadersResponse#remove
   */
  readonly remove?: string[];

  /**
   * @schema CanarySpecServiceHeadersResponse#set
   */
  readonly set?: { [key: string]: string };

}

/**
 * Converts an object of type 'CanarySpecServiceHeadersResponse' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceHeadersResponse(obj: CanarySpecServiceHeadersResponse | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': ((obj.add) === undefined) ? undefined : (Object.entries(obj.add).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'remove': obj.remove?.map(y => y),
    'set': ((obj.set) === undefined) ? undefined : (Object.entries(obj.set).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecServiceCorsPolicyAllowOrigins
 */
export interface CanarySpecServiceCorsPolicyAllowOrigins {
  /**
   * @schema CanarySpecServiceCorsPolicyAllowOrigins#exact
   */
  readonly exact?: string;

  /**
   * @schema CanarySpecServiceCorsPolicyAllowOrigins#prefix
   */
  readonly prefix?: string;

  /**
   * @schema CanarySpecServiceCorsPolicyAllowOrigins#regex
   */
  readonly regex?: string;

}

/**
 * Converts an object of type 'CanarySpecServiceCorsPolicyAllowOrigins' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceCorsPolicyAllowOrigins(obj: CanarySpecServiceCorsPolicyAllowOrigins | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exact': obj.exact,
    'prefix': obj.prefix,
    'regex': obj.regex,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecServiceTrafficPolicyConnectionPool
 */
export interface CanarySpecServiceTrafficPolicyConnectionPool {
  /**
   * HTTP connection pool settings.
   *
   * @schema CanarySpecServiceTrafficPolicyConnectionPool#http
   */
  readonly http?: CanarySpecServiceTrafficPolicyConnectionPoolHttp;

}

/**
 * Converts an object of type 'CanarySpecServiceTrafficPolicyConnectionPool' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceTrafficPolicyConnectionPool(obj: CanarySpecServiceTrafficPolicyConnectionPool | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'http': toJson_CanarySpecServiceTrafficPolicyConnectionPoolHttp(obj.http),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Settings controlling the load balancer algorithms.
 *
 * @schema CanarySpecServiceTrafficPolicyLoadBalancer
 */
export interface CanarySpecServiceTrafficPolicyLoadBalancer {
  /**
   * @schema CanarySpecServiceTrafficPolicyLoadBalancer#consistentHash
   */
  readonly consistentHash?: CanarySpecServiceTrafficPolicyLoadBalancerConsistentHash;

  /**
   * @schema CanarySpecServiceTrafficPolicyLoadBalancer#localityLbSetting
   */
  readonly localityLbSetting?: CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSetting;

  /**
   * @schema CanarySpecServiceTrafficPolicyLoadBalancer#simple
   */
  readonly simple?: CanarySpecServiceTrafficPolicyLoadBalancerSimple;

}

/**
 * Converts an object of type 'CanarySpecServiceTrafficPolicyLoadBalancer' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceTrafficPolicyLoadBalancer(obj: CanarySpecServiceTrafficPolicyLoadBalancer | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'consistentHash': toJson_CanarySpecServiceTrafficPolicyLoadBalancerConsistentHash(obj.consistentHash),
    'localityLbSetting': toJson_CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSetting(obj.localityLbSetting),
    'simple': obj.simple,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Settings controlling eviction of unhealthy hosts from the load balancing pool.
 *
 * @schema CanarySpecServiceTrafficPolicyOutlierDetection
 */
export interface CanarySpecServiceTrafficPolicyOutlierDetection {
  /**
   * Minimum ejection duration.
   *
   * @schema CanarySpecServiceTrafficPolicyOutlierDetection#baseEjectionTime
   */
  readonly baseEjectionTime?: string;

  /**
   * Number of 5xx errors before a host is ejected from the connection pool.
   *
   * @schema CanarySpecServiceTrafficPolicyOutlierDetection#consecutive5xxErrors
   */
  readonly consecutive5XxErrors?: number;

  /**
   * @schema CanarySpecServiceTrafficPolicyOutlierDetection#consecutiveErrors
   */
  readonly consecutiveErrors?: number;

  /**
   * Number of gateway errors before a host is ejected from the connection pool.
   *
   * @schema CanarySpecServiceTrafficPolicyOutlierDetection#consecutiveGatewayErrors
   */
  readonly consecutiveGatewayErrors?: number;

  /**
   * Time interval between ejection sweep analysis.
   *
   * @schema CanarySpecServiceTrafficPolicyOutlierDetection#interval
   */
  readonly interval?: string;

  /**
   * @schema CanarySpecServiceTrafficPolicyOutlierDetection#maxEjectionPercent
   */
  readonly maxEjectionPercent?: number;

  /**
   * @schema CanarySpecServiceTrafficPolicyOutlierDetection#minHealthPercent
   */
  readonly minHealthPercent?: number;

}

/**
 * Converts an object of type 'CanarySpecServiceTrafficPolicyOutlierDetection' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceTrafficPolicyOutlierDetection(obj: CanarySpecServiceTrafficPolicyOutlierDetection | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'baseEjectionTime': obj.baseEjectionTime,
    'consecutive5xxErrors': obj.consecutive5XxErrors,
    'consecutiveErrors': obj.consecutiveErrors,
    'consecutiveGatewayErrors': obj.consecutiveGatewayErrors,
    'interval': obj.interval,
    'maxEjectionPercent': obj.maxEjectionPercent,
    'minHealthPercent': obj.minHealthPercent,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Istio TLS related settings for connections to the upstream service
 *
 * @schema CanarySpecServiceTrafficPolicyTls
 */
export interface CanarySpecServiceTrafficPolicyTls {
  /**
   * @schema CanarySpecServiceTrafficPolicyTls#caCertificates
   */
  readonly caCertificates?: string;

  /**
   * REQUIRED if mode is `MUTUAL`.
   *
   * @schema CanarySpecServiceTrafficPolicyTls#clientCertificate
   */
  readonly clientCertificate?: string;

  /**
   * @schema CanarySpecServiceTrafficPolicyTls#mode
   */
  readonly mode?: CanarySpecServiceTrafficPolicyTlsMode;

  /**
   * REQUIRED if mode is `MUTUAL`.
   *
   * @schema CanarySpecServiceTrafficPolicyTls#privateKey
   */
  readonly privateKey?: string;

  /**
   * SNI string to present to the server during TLS handshake.
   *
   * @schema CanarySpecServiceTrafficPolicyTls#sni
   */
  readonly sni?: string;

  /**
   * @schema CanarySpecServiceTrafficPolicyTls#subjectAltNames
   */
  readonly subjectAltNames?: string[];

}

/**
 * Converts an object of type 'CanarySpecServiceTrafficPolicyTls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceTrafficPolicyTls(obj: CanarySpecServiceTrafficPolicyTls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'caCertificates': obj.caCertificates,
    'clientCertificate': obj.clientCertificate,
    'mode': obj.mode,
    'privateKey': obj.privateKey,
    'sni': obj.sni,
    'subjectAltNames': obj.subjectAltNames?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecAnalysisMatchHeaders
 */
export interface CanarySpecAnalysisMatchHeaders {
  /**
   * @schema CanarySpecAnalysisMatchHeaders#exact
   */
  readonly exact?: string;

  /**
   * @schema CanarySpecAnalysisMatchHeaders#prefix
   */
  readonly prefix?: string;

  /**
   * @schema CanarySpecAnalysisMatchHeaders#suffix
   */
  readonly suffix?: string;

  /**
   * RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax)
   *
   * @schema CanarySpecAnalysisMatchHeaders#regex
   */
  readonly regex?: string;

}

/**
 * Converts an object of type 'CanarySpecAnalysisMatchHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecAnalysisMatchHeaders(obj: CanarySpecAnalysisMatchHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exact': obj.exact,
    'prefix': obj.prefix,
    'suffix': obj.suffix,
    'regex': obj.regex,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Range accepted for this metric
 *
 * @schema CanarySpecAnalysisMetricsThresholdRange
 */
export interface CanarySpecAnalysisMetricsThresholdRange {
  /**
   * Min value accepted for this metric
   *
   * @schema CanarySpecAnalysisMetricsThresholdRange#min
   */
  readonly min?: number;

  /**
   * Max value accepted for this metric
   *
   * @schema CanarySpecAnalysisMetricsThresholdRange#max
   */
  readonly max?: number;

}

/**
 * Converts an object of type 'CanarySpecAnalysisMetricsThresholdRange' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecAnalysisMetricsThresholdRange(obj: CanarySpecAnalysisMetricsThresholdRange | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'min': obj.min,
    'max': obj.max,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Metric template reference
 *
 * @schema CanarySpecAnalysisMetricsTemplateRef
 */
export interface CanarySpecAnalysisMetricsTemplateRef {
  /**
   * Name of this metric template
   *
   * @schema CanarySpecAnalysisMetricsTemplateRef#name
   */
  readonly name: string;

  /**
   * Namespace of this metric template
   *
   * @schema CanarySpecAnalysisMetricsTemplateRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'CanarySpecAnalysisMetricsTemplateRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecAnalysisMetricsTemplateRef(obj: CanarySpecAnalysisMetricsTemplateRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Severity level can be info, warn, error (default info)
 *
 * @schema CanarySpecAnalysisAlertsSeverity
 */
export enum CanarySpecAnalysisAlertsSeverity {
  /**  */
  VALUE_ = '',
  /** info */
  INFO = 'info',
  /** warn */
  WARN = 'warn',
  /** error */
  ERROR = 'error',
}

/**
 * Alert provider reference
 *
 * @schema CanarySpecAnalysisAlertsProviderRef
 */
export interface CanarySpecAnalysisAlertsProviderRef {
  /**
   * Name of the alert provider
   *
   * @schema CanarySpecAnalysisAlertsProviderRef#name
   */
  readonly name: string;

  /**
   * Namespace of the alert provider
   *
   * @schema CanarySpecAnalysisAlertsProviderRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'CanarySpecAnalysisAlertsProviderRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecAnalysisAlertsProviderRef(obj: CanarySpecAnalysisAlertsProviderRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Type of the webhook pre, post or during rollout
 *
 * @schema CanarySpecAnalysisWebhooksType
 */
export enum CanarySpecAnalysisWebhooksType {
  /**  */
  VALUE_ = '',
  /** confirm-rollout */
  CONFIRM_ROLLOUT = 'confirm-rollout',
  /** pre-rollout */
  PRE_ROLLOUT = 'pre-rollout',
  /** rollout */
  ROLLOUT = 'rollout',
  /** confirm-promotion */
  CONFIRM_PROMOTION = 'confirm-promotion',
  /** post-rollout */
  POST_ROLLOUT = 'post-rollout',
  /** event */
  EVENT = 'event',
  /** rollback */
  ROLLBACK = 'rollback',
  /** confirm-traffic-increase */
  CONFIRM_TRAFFIC_INCREASE = 'confirm-traffic-increase',
}

/**
 * HTTP connection pool settings.
 *
 * @schema CanarySpecServiceTrafficPolicyConnectionPoolHttp
 */
export interface CanarySpecServiceTrafficPolicyConnectionPoolHttp {
  /**
   * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
   *
   * @schema CanarySpecServiceTrafficPolicyConnectionPoolHttp#h2UpgradePolicy
   */
  readonly h2UpgradePolicy?: CanarySpecServiceTrafficPolicyConnectionPoolHttpH2UpgradePolicy;

  /**
   * Maximum number of pending HTTP requests to a destination.
   *
   * @schema CanarySpecServiceTrafficPolicyConnectionPoolHttp#http1MaxPendingRequests
   */
  readonly http1MaxPendingRequests?: number;

  /**
   * Maximum number of requests to a backend.
   *
   * @schema CanarySpecServiceTrafficPolicyConnectionPoolHttp#http2MaxRequests
   */
  readonly http2MaxRequests?: number;

  /**
   * The idle timeout for upstream connection pool connections.
   *
   * @schema CanarySpecServiceTrafficPolicyConnectionPoolHttp#idleTimeout
   */
  readonly idleTimeout?: string;

  /**
   * Maximum number of requests per connection to a backend.
   *
   * @schema CanarySpecServiceTrafficPolicyConnectionPoolHttp#maxRequestsPerConnection
   */
  readonly maxRequestsPerConnection?: number;

  /**
   * @schema CanarySpecServiceTrafficPolicyConnectionPoolHttp#maxRetries
   */
  readonly maxRetries?: number;

}

/**
 * Converts an object of type 'CanarySpecServiceTrafficPolicyConnectionPoolHttp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceTrafficPolicyConnectionPoolHttp(obj: CanarySpecServiceTrafficPolicyConnectionPoolHttp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'h2UpgradePolicy': obj.h2UpgradePolicy,
    'http1MaxPendingRequests': obj.http1MaxPendingRequests,
    'http2MaxRequests': obj.http2MaxRequests,
    'idleTimeout': obj.idleTimeout,
    'maxRequestsPerConnection': obj.maxRequestsPerConnection,
    'maxRetries': obj.maxRetries,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecServiceTrafficPolicyLoadBalancerConsistentHash
 */
export interface CanarySpecServiceTrafficPolicyLoadBalancerConsistentHash {
  /**
   * Hash based on HTTP cookie.
   *
   * @schema CanarySpecServiceTrafficPolicyLoadBalancerConsistentHash#httpCookie
   */
  readonly httpCookie?: CanarySpecServiceTrafficPolicyLoadBalancerConsistentHashHttpCookie;

  /**
   * Hash based on a specific HTTP header.
   *
   * @schema CanarySpecServiceTrafficPolicyLoadBalancerConsistentHash#httpHeaderName
   */
  readonly httpHeaderName?: string;

  /**
   * Hash based on a specific HTTP query parameter.
   *
   * @schema CanarySpecServiceTrafficPolicyLoadBalancerConsistentHash#httpQueryParameterName
   */
  readonly httpQueryParameterName?: string;

  /**
   * @schema CanarySpecServiceTrafficPolicyLoadBalancerConsistentHash#minimumRingSize
   */
  readonly minimumRingSize?: number;

  /**
   * Hash based on the source IP address.
   *
   * @schema CanarySpecServiceTrafficPolicyLoadBalancerConsistentHash#useSourceIp
   */
  readonly useSourceIp?: boolean;

}

/**
 * Converts an object of type 'CanarySpecServiceTrafficPolicyLoadBalancerConsistentHash' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceTrafficPolicyLoadBalancerConsistentHash(obj: CanarySpecServiceTrafficPolicyLoadBalancerConsistentHash | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'httpCookie': toJson_CanarySpecServiceTrafficPolicyLoadBalancerConsistentHashHttpCookie(obj.httpCookie),
    'httpHeaderName': obj.httpHeaderName,
    'httpQueryParameterName': obj.httpQueryParameterName,
    'minimumRingSize': obj.minimumRingSize,
    'useSourceIp': obj.useSourceIp,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSetting
 */
export interface CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSetting {
  /**
   * Optional: only one of distribute or failover can be set.
   *
   * @schema CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSetting#distribute
   */
  readonly distribute?: CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingDistribute[];

  /**
   * enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.
   *
   * @schema CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSetting#enabled
   */
  readonly enabled?: boolean;

  /**
   * Optional: only failover or distribute can be set.
   *
   * @schema CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSetting#failover
   */
  readonly failover?: CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingFailover[];

}

/**
 * Converts an object of type 'CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSetting' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSetting(obj: CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSetting | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'distribute': obj.distribute?.map(y => toJson_CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingDistribute(y)),
    'enabled': obj.enabled,
    'failover': obj.failover?.map(y => toJson_CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingFailover(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecServiceTrafficPolicyLoadBalancerSimple
 */
export enum CanarySpecServiceTrafficPolicyLoadBalancerSimple {
  /** ROUND_ROBIN */
  ROUND_ROBIN = 'ROUND_ROBIN',
  /** LEAST_CONN */
  LEAST_CONN = 'LEAST_CONN',
  /** RANDOM */
  RANDOM = 'RANDOM',
  /** PASSTHROUGH */
  PASSTHROUGH = 'PASSTHROUGH',
}

/**
 * @schema CanarySpecServiceTrafficPolicyTlsMode
 */
export enum CanarySpecServiceTrafficPolicyTlsMode {
  /** DISABLE */
  DISABLE = 'DISABLE',
  /** SIMPLE */
  SIMPLE = 'SIMPLE',
  /** MUTUAL */
  MUTUAL = 'MUTUAL',
  /** ISTIO_MUTUAL */
  ISTIO_MUTUAL = 'ISTIO_MUTUAL',
}

/**
 * Specify if http1.1 connection should be upgraded to http2 for the associated destination.
 *
 * @schema CanarySpecServiceTrafficPolicyConnectionPoolHttpH2UpgradePolicy
 */
export enum CanarySpecServiceTrafficPolicyConnectionPoolHttpH2UpgradePolicy {
  /** DEFAULT */
  DEFAULT = 'DEFAULT',
  /** DO_NOT_UPGRADE */
  DO_NOT_UPGRADE = 'DO_NOT_UPGRADE',
  /** UPGRADE */
  UPGRADE = 'UPGRADE',
}

/**
 * Hash based on HTTP cookie.
 *
 * @schema CanarySpecServiceTrafficPolicyLoadBalancerConsistentHashHttpCookie
 */
export interface CanarySpecServiceTrafficPolicyLoadBalancerConsistentHashHttpCookie {
  /**
   * Name of the cookie.
   *
   * @schema CanarySpecServiceTrafficPolicyLoadBalancerConsistentHashHttpCookie#name
   */
  readonly name?: string;

  /**
   * Path to set for the cookie.
   *
   * @schema CanarySpecServiceTrafficPolicyLoadBalancerConsistentHashHttpCookie#path
   */
  readonly path?: string;

  /**
   * Lifetime of the cookie.
   *
   * @schema CanarySpecServiceTrafficPolicyLoadBalancerConsistentHashHttpCookie#ttl
   */
  readonly ttl?: string;

}

/**
 * Converts an object of type 'CanarySpecServiceTrafficPolicyLoadBalancerConsistentHashHttpCookie' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceTrafficPolicyLoadBalancerConsistentHashHttpCookie(obj: CanarySpecServiceTrafficPolicyLoadBalancerConsistentHashHttpCookie | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'path': obj.path,
    'ttl': obj.ttl,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingDistribute
 */
export interface CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingDistribute {
  /**
   * Originating locality, '/' separated, e.g.
   *
   * @schema CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingDistribute#from
   */
  readonly from?: string;

  /**
   * Map of upstream localities to traffic distribution weights.
   *
   * @schema CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingDistribute#to
   */
  readonly to?: { [key: string]: number };

}

/**
 * Converts an object of type 'CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingDistribute' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingDistribute(obj: CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingDistribute | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'from': obj.from,
    'to': ((obj.to) === undefined) ? undefined : (Object.entries(obj.to).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingFailover
 */
export interface CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingFailover {
  /**
   * Originating region.
   *
   * @schema CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingFailover#from
   */
  readonly from?: string;

  /**
   * @schema CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingFailover#to
   */
  readonly to?: string;

}

/**
 * Converts an object of type 'CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingFailover' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingFailover(obj: CanarySpecServiceTrafficPolicyLoadBalancerLocalityLbSettingFailover | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'from': obj.from,
    'to': obj.to,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */


/**
 * MetricTemplate is the Schema for the MetricTemplates API.
 *
 * @schema MetricTemplate
 */
export class MetricTemplate extends ApiObject {
  /**
   * Returns the apiVersion and kind for "MetricTemplate"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'flagger.app/v1beta1',
    kind: 'MetricTemplate',
  }

  /**
   * Renders a Kubernetes manifest for "MetricTemplate".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: MetricTemplateProps = {}): any {
    return {
      ...MetricTemplate.GVK,
      ...toJson_MetricTemplateProps(props),
    };
  }

  /**
   * Defines a "MetricTemplate" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: MetricTemplateProps = {}) {
    super(scope, id, {
      ...MetricTemplate.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...MetricTemplate.GVK,
      ...toJson_MetricTemplateProps(resolved),
    };
  }
}

/**
 * MetricTemplate is the Schema for the MetricTemplates API.
 *
 * @schema MetricTemplate
 */
export interface MetricTemplateProps {
  /**
   * @schema MetricTemplate#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * MetricTemplateSpec defines the desired state of a MetricTemplate.
   *
   * @schema MetricTemplate#spec
   */
  readonly spec?: MetricTemplateSpec;

}

/**
 * Converts an object of type 'MetricTemplateProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_MetricTemplateProps(obj: MetricTemplateProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_MetricTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * MetricTemplateSpec defines the desired state of a MetricTemplate.
 *
 * @schema MetricTemplateSpec
 */
export interface MetricTemplateSpec {
  /**
   * Provider of this metric template
   *
   * @schema MetricTemplateSpec#provider
   */
  readonly provider: MetricTemplateSpecProvider;

  /**
   * Query of this metric template
   *
   * @schema MetricTemplateSpec#query
   */
  readonly query: string;

}

/**
 * Converts an object of type 'MetricTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_MetricTemplateSpec(obj: MetricTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'provider': toJson_MetricTemplateSpecProvider(obj.provider),
    'query': obj.query,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Provider of this metric template
 *
 * @schema MetricTemplateSpecProvider
 */
export interface MetricTemplateSpecProvider {
  /**
   * Type of this provider
   *
   * @schema MetricTemplateSpecProvider#type
   */
  readonly type: MetricTemplateSpecProviderType;

  /**
   * API address of this provider
   *
   * @schema MetricTemplateSpecProvider#address
   */
  readonly address?: string;

  /**
   * Kubernetes secret reference containing the provider credentials
   *
   * @schema MetricTemplateSpecProvider#secretRef
   */
  readonly secretRef?: MetricTemplateSpecProviderSecretRef;

  /**
   * Region of the provider
   *
   * @schema MetricTemplateSpecProvider#region
   */
  readonly region?: string;

  /**
   * Disable SSL certificate validation for the provider address
   *
   * @schema MetricTemplateSpecProvider#insecureSkipVerify
   */
  readonly insecureSkipVerify?: boolean;

}

/**
 * Converts an object of type 'MetricTemplateSpecProvider' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_MetricTemplateSpecProvider(obj: MetricTemplateSpecProvider | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'type': obj.type,
    'address': obj.address,
    'secretRef': toJson_MetricTemplateSpecProviderSecretRef(obj.secretRef),
    'region': obj.region,
    'insecureSkipVerify': obj.insecureSkipVerify,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Type of this provider
 *
 * @schema MetricTemplateSpecProviderType
 */
export enum MetricTemplateSpecProviderType {
  /** prometheus */
  PROMETHEUS = 'prometheus',
  /** influxdb */
  INFLUXDB = 'influxdb',
  /** datadog */
  DATADOG = 'datadog',
  /** stackdriver */
  STACKDRIVER = 'stackdriver',
  /** cloudwatch */
  CLOUDWATCH = 'cloudwatch',
  /** newrelic */
  NEWRELIC = 'newrelic',
  /** graphite */
  GRAPHITE = 'graphite',
  /** dynatrace */
  DYNATRACE = 'dynatrace',
}

/**
 * Kubernetes secret reference containing the provider credentials
 *
 * @schema MetricTemplateSpecProviderSecretRef
 */
export interface MetricTemplateSpecProviderSecretRef {
  /**
   * Name of the Kubernetes secret
   *
   * @schema MetricTemplateSpecProviderSecretRef#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'MetricTemplateSpecProviderSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_MetricTemplateSpecProviderSecretRef(obj: MetricTemplateSpecProviderSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

